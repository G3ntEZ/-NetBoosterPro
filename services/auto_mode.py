import threading
import time
import subprocess
from app.optimizer import set_dns_cloudflare, set_dns_google
# —Ñ—É–Ω–∫—Ü–∏—è update_status –±—É–¥–µ—Ç –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å—Å—è –∏–∑ main_window

class AutoOptimizer:
    def __init__(self, status_callback):
        self.status_callback = status_callback
        self.running = False
        self.thread = None
        self.interval = 30  # –∏–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö

    def start(self):
        if self.running:
            return
        self.running = True
        self.thread = threading.Thread(target=self.run, daemon=True)
        self.thread.start()
        self.status_callback("‚úÖ –ê–≤—Ç–æ-—Ä–µ–∂–∏–º –∑–∞–ø—É—â–µ–Ω (–ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥)")

    def stop(self):
        self.running = False
        self.status_callback("‚èπ –ê–≤—Ç–æ-—Ä–µ–∂–∏–º –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

    def run(self):
        current_dns = "cloudflare"
        set_dns_cloudflare()
        self.status_callback("üåê –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è DNS Cloudflare")

        while self.running:
            try:
                ping_cf = self.ping_host("1.1.1.1")
                ping_google = self.ping_host("8.8.8.8")

                self.status_callback(f"üì° –ü–∏–Ω–≥ Cloudflare: {ping_cf} ms | Google: {ping_google} ms")

                if ping_google < ping_cf - 10 and current_dns != "google":
                    set_dns_google()
                    current_dns = "google"
                    self.status_callback("üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ Google DNS (–ª—É—á—à–∏–π –ø–∏–Ω–≥)")

                elif ping_cf < ping_google - 10 and current_dns != "cloudflare":
                    set_dns_cloudflare()
                    current_dns = "cloudflare"
                    self.status_callback("üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ Cloudflare DNS (–ª—É—á—à–∏–π –ø–∏–Ω–≥)")

            except Exception as e:
                self.status_callback(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∞–≤—Ç–æ-—Ä–µ–∂–∏–º–∞: {e}")

            time.sleep(self.interval)

    def ping_host(self, host):
        # –ü–∏–Ω–≥—É–µ–º 1 —Ä–∞–∑, –∂–¥—ë–º –º–∞–∫—Å–∏–º—É–º 1 —Å–µ–∫—É–Ω–¥—É
        try:
            output = subprocess.run(["ping", "-n", "1", "-w", "1000", host],
                                    capture_output=True, text=True, timeout=3)
            result = output.stdout
            # –ò—â–µ–º –≤—Ä–µ–º—è –≤ ms
            for line in result.splitlines():
                if "–°—Ä–µ–¥–Ω–µ–µ" in line or "Average" in line:
                    ms = line.split("=")[-1].replace("ms", "").replace("–º—Å", "").strip()
                    return int(ms)
            # –µ—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ —Å—Ç—Ä–æ–∫—É —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º
            return 999
        except:
            return 999
